package ask

import (
	"fmt"
	"net/http"
	"os"
	"time"

	events2 "github.com/byuoitav/common/v2/events"
)

// MStatusJob checks the mstatus of important microservices, and reports their status.
type MStatusJob struct {
}

var microserviceURLs = map[string]string{
	"av-api":        "localhost:8000",
	"event-router":  "localhost:7000",
	"touchpanel-ui": "localhost:8888",
}

// Run runs the job.
func (m *MStatusJob) Run(ctx interface{}, eventWrite chan events2.Event) {
	host, err := os.Hostname()
	if err != nil {
		host = hostname
	}

	event := events2.Event{
		GeneratingSystem: host,
		Timestamp:        time.Now(),
		EventTags: []string{
			events2.Heartbeat,
			events2.AutoGenerated,
		},
		TargetRoom: events2.BasicRoomInfo{
			BuildingID: buildingID,
			RoomID:     fmt.Sprintf("%s-%s", buildingID, roomID),
		},
	}
	/*
		event := events.Event{
			Hostname:         hostname,
			Timestamp:        time.Now().Format(time.RFC3339),
			LocalEnvironment: true,
			Building:         buildingID,
			Room:             room,
			Event: events.EventInfo{
				Type:           events.HEARTBEAT,
				Requestor:      host,
				EventCause:     events.AUTOGENERATED,
				Device:         device.Name,
				DeviceID:       device.ID,
				EventInfoKey:   "",
				EventInfoValue: "",
			},
		}
	*/

	for _, url := range microserviceURLs {
		resp, err := http.Get(fmt.Sprintf("http://%v", url))
		if err != nil {
		}
	}
}
