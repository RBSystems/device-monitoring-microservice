package logstash

import (
	"bytes"
	"encoding/json"
	"io/ioutil"
	"log"
	"net/http"
	"os"

	ei "github.com/byuoitav/common/events"
	"github.com/byuoitav/salt-translator-service/elk"
)

func SendEvent(building, room, timestamp, device, message string) error {

	address := os.Getenv("ELASTIC_HEARTBEAT_EVENTS")
	log.Printf("Sending alert to: %s", address)

	data := make(map[string]interface{})
	data["status"] = message

	name := building + "-" + room + "-" + device

	event := elk.Event{
		Building:  building,
		Room:      room,
		Cause:     ei.AUTOGENERATED.String(),
		Category:  ei.INFO.String(),
		Timestamp: timestamp,
		Hostname:  name,
		HostType:  "av device",
		Data:      data,
	}

	payload, err := json.Marshal(event)
	if err != nil {
		log.Printf("Error marshalling event: %v: %s", event, err.Error())
		return err
	}

	log.Printf("Payload: %s", payload)

	response, err := http.Post(address, "application/json", bytes.NewBuffer(payload))
	if err != nil {
		log.Printf("Error sending event: %v: %s", event, err.Error())
		return err
	}

	value, err := ioutil.ReadAll(response.Body)
	if err != nil {
		log.Printf("Error reading response: %s", err.Error())
	}

	log.Printf("Response: %s", value)

	return nil
}
